@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isDarkMode" Theme="Configuration.Theme"/>
<MudSnackbarProvider/>
<MudDialogProvider/>
<MudPopoverProvider/>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar Elevation="1">
                <MudButton StartIcon="@(_isDrawerOpened ? Icons.Material.Rounded.MenuOpen : Icons.Material.Rounded.Menu)" 
                           OnClick="ToggleDrawer"/>
                <MudButton Href="/" StartIcon="@Icons.Material.Rounded.Home">
                    JV ESTOQUE
                </MudButton>
                <MudSpacer/>
                <MudButton Href="/produtos" StartIcon="@Icons.Material.Rounded.Inventory2">
                    Produtos
                </MudButton>
                <MudSpacer/>
                <MudButton Href="/dasboard" StartIcon="@Icons.Material.Rounded.Dashboard">
                    DashBoard
                </MudButton>
                <MudSpacer/>
                <MudButton Href="/pedidos" StartIcon="@Icons.Material.Rounded.Receipt">
                    Pedidos
                </MudButton>
                <MudSpacer/>
                <MudButton Href="/sair" StartIcon="@Icons.Material.Rounded.Logout">
                    Sair
                </MudButton>
                <MudSwitch Color="Color.Inherit" @bind-Value="_isDarkMode" T="bool" ThumbIcon="@Icons.Material.Rounded.Lightbulb" Class="ma-4"/>
            </MudAppBar>
            <MudDrawer @bind-Open="_isDrawerOpened" Elevation="1" Variant="DrawerVariant.Temporary" Overlay="true">
                <MudDrawerHeader>
                    <MudButton>Menu</MudButton>
                    <MudSpacer/>
                    <MudButton StartIcon="@(_isDrawerOpened ? Icons.Material.Rounded.MenuOpen : Icons.Material.Rounded.Menu)" OnClick="ToggleDrawer"/>
                </MudDrawerHeader>
                <NavMenu/>
            </MudDrawer>
            <MudMainContent>
                <MudContainer Class="mt-4" MaxWidth="MaxWidth.Large">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect />
    </NotAuthorized>
</AuthorizeView>

@code{
    
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;
    private bool _isDrawerOpened = false;
    private bool _isDarkMode = true;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemDarkModeAsync();
            await _mudThemeProvider.WatchSystemDarkModeAsync(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }
    
    private void ToggleDrawer() =>
        _isDrawerOpened = !_isDrawerOpened;
}